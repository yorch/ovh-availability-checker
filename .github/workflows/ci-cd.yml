name: CI / CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  GITHUB_DOCKER_REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-nodejs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [16, 18]
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --immutable

      # - name: Run tests
      #   run: yarn test

      - name: Run linter
        run: yarn lint

      - name: Run build
        run: yarn build

  build-docker:
    needs: build-nodejs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.GITHUB_DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          # images: ${{ env.GITHUB_DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}
          # Passing two images, one for Docker Hub and one for GitHub Container Registry.
          images: |
            ${{ env.IMAGE_NAME }}
            ${{ env.GITHUB_DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}
          # Set latest tag for default branch
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and Push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # TODO: Find a better to test the container.
      # In PRs, it will download the image from the registry instead of testing the one from this PR.
      # - name: Run the Docker container
      #   run: docker run -d --name checker ${{ env.IMAGE_NAME }}

      # - name: Check Docker container logs
      #   run: docker logs checker

      # - name: List all containers
      #   run: docker ps -a
